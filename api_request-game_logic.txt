obs: namnen är preliminära.

(starts a new erlang-process with a database)
start(Db_name, State_sender_pid, Tick_rate) -> ok / name_already_exist

register_action(Db_name, Actions) ->
Actions = {action_add, Db_name, Id, action/server_actions, Val_list[tom]}
Id = (Int (=Player_id) / atom (=global) / atom (=server)

Action = (move_* / stop), * = up, down, left, right (för spelare och global)
Server_actions = {add_player, [id, name]} / {remove_player, [id, name]} / {change_settings, [Vel_factor, Grid_limit, Vel_limit, Friction] / no_change}
	     

get_state(Db_name) -> State / alternativt att du har en egen loop skickar statesen
		      	      till alla geese_statesend-processer ex. 30 ggr/sek 
State = {Server_settings, [{"spelarName", Pos, Vel, Hp, 0}, ..., {"spelarName", Pos, Vel, Hp, N}]
      	Server_settings = {Player_move_factor, Grid_limit, Vel_limit, Friction} 
      
